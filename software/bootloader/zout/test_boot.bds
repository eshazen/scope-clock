binary-debuggable-source
0000 0000 f test_boot.asm
0000 0000 s 	;;
0000 0000 s 	;; test EEPROM copy
0000 0000 s 	;; 
0000 0000 s 
f000 f000 s 	org	$f000
f000 f000 s 
f000 f000 s ;;; EEPROM loader
f000 f000 s ;;; load all images from the flash table
f000 f000 d 2a02f1
f000 f000 s 	ld	hl,(flashtable)
f003 f003 d 7c
f003 f003 s 	ld	a,h		;check for 0xcafe
f004 f004 d feca
f004 f004 s 	cp	0xca
f006 f006 d c20081
f006 f006 s 	jp	nz,$8100
f009 f009 d 7d
f009 f009 s 	ld	a,l
f00a f00a d fefe
f00a f00a s 	cp	0xfe
f00c f00c d c20081
f00c f00c s 	jp	nz,$8100
f00f f00f d dd2104f1
f00f f00f s 	ld	ix,flashtable+2	;first image
f013 f013 s flashy:	
f013 f013 d dd6e00
f013 f013 s 	ld	l,(ix)		;start address
f016 f016 d dd6601
f016 f016 s 	ld	h,(ix+1)
f019 f019 s 	;; check for zero = end
f019 f019 d 7c
f019 f019 s 	ld	a,h
f01a f01a d b5
f01a f01a s 	or	l
f01b f01b d 2836
f01b f01b s 	jr	z,flash_done
f01d f01d d dd5e02
f01d f01d s 	ld	e,(ix+2)	;target address
f020 f020 d dd5603
f020 f020 s 	ld	d,(ix+3)
f023 f023 d dd4e04
f023 f023 s 	ld	c,(ix+4)	;count
f026 f026 d dd4605
f026 f026 s 	ld	b,(ix+5)
f029 f029 d edb0
f029 f029 s 	ldir			;move it
f02b f02b s 
f02b f02b d 010800
f02b f02b s 	ld	bc,fimgsiz
f02e f02e d dd09
f02e f02e s 	add	ix,bc
f030 f030 s 
f030 f030 d 00
f030 f030 s 	nop
f031 f031 d 00
f031 f031 s 	nop
f032 f032 d 00
f032 f032 s 	nop
f033 f033 s 	
f033 f033 d dd6e00
f033 f033 s 	ld	l,(ix)		;start address
f036 f036 d dd6601
f036 f036 s 	ld	h,(ix+1)
f039 f039 s 	;; check for zero = end
f039 f039 d 7c
f039 f039 s 	ld	a,h
f03a f03a d b5
f03a f03a s 	or	l
f03b f03b d 2816
f03b f03b s 	jr	z,flash_done
f03d f03d d dd5e02
f03d f03d s 	ld	e,(ix+2)	;target address
f040 f040 d dd5603
f040 f040 s 	ld	d,(ix+3)
f043 f043 d dd4e04
f043 f043 s 	ld	c,(ix+4)	;count
f046 f046 d dd4605
f046 f046 s 	ld	b,(ix+5)
f049 f049 d edb0
f049 f049 s 	ldir			;move it
f04b f04b s 
f04b f04b d 010800
f04b f04b s 	ld	bc,fimgsiz
f04e f04e d dd09
f04e f04e s 	add	ix,bc
f050 f050 s 
f050 f050 d 00
f050 f050 s 	nop
f051 f051 d 00
f051 f051 s 	nop
f052 f052 d 00
f052 f052 s 	nop
f053 f053 s 
f053 f053 s 
f053 f053 s ;	jr	flashy		
f053 f053 s 
f053 f053 s flash_done:	
f053 f053 d 2a00f1
f053 f053 s 	ld	hl,(flashentry)	;start address
f056 f056 s 
f056 f056 d c30081
f056 f056 s 	jp	8100h		;goto UMON
f059 f059 s 	
f059 f059 s 	
f100 f100 s 	org	$f100
f100 f100 s 
f100 f100 s ;;;
f100 f100 s ;;; table of flash images
f100 f100 s ;;; 
f100 f100 s flashentry:
f100 f100 s ;	dw	0x9000		;entry point
f100 f100 d 0081
f100 f100 s 	dw	0x8100		;entry point (umon for now)
f102 f102 s 
f102 f102 s fimgsiz: equ	8		;size of one entry in bytes
f102 f102 s 	
f102 f102 s flashtable:	
f102 f102 d feca
f102 f102 s 	dw	0xcafe		;magic number marks start of table
f104 f104 s ;;; first flash image (calculator)
f104 f104 d 0010
f104 f104 s 	dw	0x1000		;start address in ROM
f106 f106 d 0090
f106 f106 s 	dw	0x9000		;RAM target address
f108 f108 d 0040
f108 f108 s 	dw	0x4000		;size in bytes (plenty big, now 0x2e00 or so)
f10a f10a d 0090
f10a f10a s 	dw	0x9000		;entry point (ignored, see flashentry)
f10c f10c s 
f10c f10c s ;;; second flash image (umon)
f10c f10c d 0050
f10c f10c s 	dw	0x5000		;above the first image
f10e f10e d 0081
f10e f10e s 	dw	0x8100		;RAM target address
f110 f110 d 000f
f110 f110 s 	dw	0x0f00		;size in bytes
f112 f112 d 0081
f112 f112 s 	dw	0x8100		;entry point (ignored, see flashentry)
f114 f114 s 
f114 f114 d 0000000000000000
f114 f114 s 	dw	0,0,0,0		;table ends with zeroes
f11c f11c s 	
f11c f11c s 	end
f013 a flashy
0008 v fimgsiz
f053 a flash_done
f102 a flashtable
f100 a flashentry
